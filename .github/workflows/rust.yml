name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Cache Cargo dependencies
    - name: Cache Cargo registry
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    # Build the backend Rust project
    - name: Build
      run: cargo build --verbose
      working-directory: ./backend

    # Run tests in the backend
    - name: Run tests
      run: cargo test --verbose
      working-directory: ./backend

    # Run Clippy (linter) on the backend
    - name: Run Clippy
      run: cargo clippy -- -D warnings
      working-directory: ./backend

    # Check formatting in the backend
    - name: Check formatting
      run: cargo fmt -- --check
      working-directory: ./backend

    # Optionally build in release mode
    - name: Build Release
      run: cargo build --release --verbose
      working-directory: ./backend
